

        IntStream.iterate(0, i -> i + 1)
                .limit(numOfDaysBetween)
                .mapToObj((IntFunction<?>) i -> {

                    log.info ("======================= dia: {} ====================",i);
                    listPersonal.forEach((VwPersonalDto temp) -> {


                        /************************************************************/
                        LocalDate fechainicio= LocalDate.parse(temp.getFechainicio(),formatter);
                        LocalDate dfechacesecontrato= temp.getDfechacesecontrato();
                        LocalDate dfechabajaadenda= temp.getDfechabajaadenda();
                        LocalDate dfechafinadenda = temp.getDfechafinadenda();
                        LocalDate dfechafincontrato = temp.getDfechafincontrato();



                        /************************************************************/


                        LocalDate lddesdeplusidays=LocalDate.from(lddesde.plusDays(i).atStartOfDay());
                        log.info("lddesdeplusidays "+lddesdeplusidays.toString());


                        /************************************************************/


                        if( fechainicio.isBefore(lddesdeplusidays)
                            ? (Optional.ofNullable(dfechacesecontrato).isPresent()
                                ? dfechacesecontrato.isAfter(lddesdeplusidays) || dfechacesecontrato.isEqual(lddesdeplusidays)
                                : (Optional.ofNullable(dfechabajaadenda).isPresent()
                                ? dfechabajaadenda.isAfter(lddesdeplusidays) || dfechabajaadenda.isEqual(lddesdeplusidays)
                                : (Optional.ofNullable(dfechafinadenda).isPresent()
                                ? dfechafinadenda.isAfter(lddesdeplusidays) || dfechafinadenda.isEqual(lddesdeplusidays)
                                : (Optional.ofNullable(dfechafincontrato).isPresent()
                                ? dfechafincontrato.isAfter(lddesdeplusidays) || dfechafincontrato.isEqual(lddesdeplusidays)
                                : true))))
                            :fechainicio.isEqual(lddesdeplusidays)){
                            //log.info("llegue hasta aca"+ fechainicio.toString());
                        }




                        //FILTRA MARCACION DE PERSONAL POR DNI DE LA PERSONA
                        List<MarcacionPersonalDto> listMarcacionPersonalFiltrado = listMarcacionPersonal.stream()
                                .filter((MarcacionPersonalDto t)
                                        -> //localDate.ofInstant(t.getFecha().toInstant(), ZoneId.systemDefault())
                                      // t.getFecha().toLocalDate()
                                      //  .equals(lddesdeplusidays) &&
                                        t.getDocumentoidentidad().equals(temp.getDocumentoidentidad())).toList();

                        listMarcacionPersonal.removeAll(listMarcacionPersonalFiltrado);
                        /*
                        //FILTRA ASISTENCIA PARCIAL POR IDPERSONAL
                        List<TControlAsistParcial> listControlAsistenciaParcialFiltrado = listControlAsistenciaParcial.stream()
                                .filter((TControlAsistParcial t)
                                        -> EAIUtil.formatoFechaOut.format(t.getFecha()).equals(EAIUtil.formatoFechaOut.format(Date.from(lddesde.plusDays(i).atStartOfDay(ZoneId.systemDefault()).toInstant()))) && t.getIdpersonal().getIdpersonal().equals(temp.getIdpersonal()))
                                .collect(Collectors.toList());
                        listControlAsistenciaParcial.removeAll(listControlAsistenciaParcialFiltrado);
                        */


                    });

                    return null;

                }).collect(Collectors.toList());
